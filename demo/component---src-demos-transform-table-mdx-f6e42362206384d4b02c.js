(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"7jNX":function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return m})),t.d(e,"default",(function(){return c}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var a=t("/FXl"),o=t("TjRS"),r=t("ZFoC"),s=t("VaUg");t("aD51");function l(){return(l=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n}).apply(this,arguments)}var m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/demos/transform-table.mdx"}});var d={_frontmatter:m},u=o.a;function c(n){var e,t=n.components,c=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,["components"]);return Object(a.b)(u,l({},d,c,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"transformtable"},"TransformTable"),Object(a.b)(r.c,{__position:0,__code:"<TransformTable />",__scope:(e={props:c,DefaultLayout:o.a,Playground:r.c,Props:r.d,TransformTable:s.a},e.DefaultLayout=o.a,e._frontmatter=m,e),mdxType:"Playground"},Object(a.b)(s.a,{mdxType:"TransformTable"})),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-javascript"}),"\nimport React, { FC, useState } from 'react'\nimport Table, { ColumnProps } from 'antd/lib/table'\nimport 'antd/dist/antd.css'\nimport { transformTable } from 'antd-utils'\nimport Button from 'antd/lib/button';\n\nenum ETableType {\n  old = 0,\n  new\n}\n\nexport const TransformTable: FC = () => {\n  const oldColumns: ColumnProps<any>[] =\n    [\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n      },\n      {\n        title: '年龄',\n        dataIndex: 'age',\n        key: 'age',\n      },\n      {\n        title: '住址',\n        dataIndex: 'address',\n        key: 'address',\n      },\n    ];\n  const oldData: any[] =\n    [\n      {\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号',\n      },\n      {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号',\n      },\n    ];\n  const { newColumns, newData } = transformTable(oldColumns, oldData);\n  const [tableType, setTableType] = useState(ETableType.old)\n  const [columns, setColumns] = useState(oldColumns);\n  const [data, setData] = useState(oldData);\n\n  const isOldType = (tableType === ETableType.old);\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setColumns(isOldType ? newColumns : oldColumns);\n          setData(isOldType ? newData : oldData);\n          setTableType(Number(!tableType));\n        }}>{isOldType ? '行转列' : '列转行'}</Button>\n      <br /><br />\n      <Table\n        showHeader={isOldType}\n        dataSource={data}\n        columns={columns}\n      />\n    </>\n  )\n}\n\n")))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/demos/transform-table.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-demos-transform-table-mdx-f6e42362206384d4b02c.js.map