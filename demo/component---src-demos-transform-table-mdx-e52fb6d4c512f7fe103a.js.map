{"version":3,"sources":["webpack:///../src/demos/transform-table.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAOO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,YAAC,IAAD,CAAgBA,QAAQ,mBACxB,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,omD,6MA8ETJ,EAAWK,gBAAiB","file":"component---src-demos-transform-table-mdx-e52fb6d4c512f7fe103a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xuxun/Documents/projects/xx/antd-utils/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { TransformTable } from './transform-table';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"表格行转列-transformtable\"\n    }}>{`表格行转列 transformTable`}</h1>\n    <TransformTable mdxType=\"TransformTable\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nimport React, { FC, useState } from 'react'\nimport Table, { ColumnProps } from 'antd/lib/table'\nimport 'antd/dist/antd.css'\nimport { transformTable } from 'antd-utils'\nimport Button from 'antd/lib/button';\n\nenum ETableType {\n  old = 0,\n  new\n}\n\nexport const TransformTable: FC = () => {\n  const oldColumns: ColumnProps<any>[] =\n    [\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n      },\n      {\n        title: '年龄',\n        dataIndex: 'age',\n        key: 'age',\n      },\n      {\n        title: '住址',\n        dataIndex: 'address',\n        key: 'address',\n      },\n    ];\n  const oldData: any[] =\n    [\n      {\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号',\n      },\n      {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号',\n      },\n    ];\n  const { newColumns, newData } = transformTable(oldColumns, oldData);\n  const [tableType, setTableType] = useState(ETableType.old)\n  const [columns, setColumns] = useState(oldColumns);\n  const [data, setData] = useState(oldData);\n\n  const isOldType = (tableType === ETableType.old);\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setColumns(isOldType ? newColumns : oldColumns);\n          setData(isOldType ? newData : oldData);\n          setTableType(Number(!tableType));\n        }}>{isOldType ? '行转列' : '列转行'}</Button>\n      <br /><br />\n      <Table\n        showHeader={isOldType}\n        dataSource={data}\n        columns={columns}\n      />\n    </>\n  )\n}\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}